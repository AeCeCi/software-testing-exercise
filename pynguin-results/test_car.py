# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import car as module_0


def test_case_0():
    float_0 = -13.59933065467643
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.change_speed(float_0)
    assert car_0.time == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.change_speed(bool_0)
    assert car_0.time == 1
    var_0.step()


def test_case_2():
    float_0 = -35.84348955890579
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.change_speed(float_0)
    assert car_0.time == 1
    car_1 = module_0.Car()
    assert car_1.speed == 0
    assert car_1.odometer == 0
    assert car_1.time == 0
    car_2 = module_0.Car()
    assert car_2.speed == 0
    assert car_2.odometer == 0
    assert car_2.time == 0
    with pytest.raises(Exception):
        car_2.average_speed()


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -12.76562758095508
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.change_speed(float_0)
    assert car_0.time == 1
    car_1 = module_0.Car()
    assert car_1.speed == 0
    assert car_1.odometer == 0
    assert car_1.time == 0
    var_1 = car_0.average_speed()
    assert var_1 == pytest.approx(0.0, abs=0.01, rel=0.01)
    var_0.change_speed(car_1)


def test_case_4():
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0


@pytest.mark.xfail(strict=True)
def test_case_5():
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.step()
    assert car_0.time == 1
    var_1 = car_0.get_current_speed()
    assert var_1 == 0
    car_0.change_speed(car_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.step()
    assert car_0.time == 1
    var_0.step()


@pytest.mark.xfail(strict=True)
def test_case_7():
    float_0 = -0.23206040601398698
    car_0 = module_0.Car()
    assert car_0.speed == 0
    assert car_0.odometer == 0
    assert car_0.time == 0
    var_0 = car_0.change_speed(float_0)
    assert car_0.time == 1
    bool_0 = True
    var_1 = car_0.change_speed(bool_0)
    assert car_0.speed == 1
    assert car_0.odometer == 1
    assert car_0.time == 2
    var_2 = car_0.get_current_speed()
    assert var_2 == 1
    var_3 = car_0.change_speed(float_0)
    assert car_0.speed == pytest.approx(0.767939593986013, abs=0.01, rel=0.01)
    assert car_0.odometer == pytest.approx(1.767939593986013, abs=0.01, rel=0.01)
    assert car_0.time == 3
    car_0.change_speed(var_1)
